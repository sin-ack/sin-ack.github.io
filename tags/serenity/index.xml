<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>serenity on sin-ack&#39;s writings</title>
    <link>https://sin-ack.github.io/tags/serenity/</link>
    <description>Recent content in serenity on sin-ack&#39;s writings</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 19 Oct 2022 19:00:00 +0000</lastBuildDate><atom:link href="https://sin-ack.github.io/tags/serenity/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>That Time I Ported Zig to SerenityOS</title>
      <link>https://sin-ack.github.io/posts/sycl-talk-20221007/</link>
      <pubDate>Wed, 19 Oct 2022 19:00:00 +0000</pubDate>
      
      <guid>https://sin-ack.github.io/posts/sycl-talk-20221007/</guid>
      <description>This was a talk I gave at the Software You Can Love 2022 conference. You can find the slides right here (PDF).
Today I want to tell you a story about the time I ported the Zig compiler to SerenityOS.
I&amp;rsquo;m going to tell you a bit about what my motivation was to do this. Then I&amp;rsquo;ll explain the steps I took and the various challenges I faced (there were a lot of those!</description>
    </item>
    
    <item>
      <title>How malloc broke Serenity&#39;s JPGLoader, or: how to win the lottery</title>
      <link>https://sin-ack.github.io/posts/jpg-loader-bork/</link>
      <pubDate>Thu, 03 Jun 2021 00:00:00 +0200</pubDate>
      
      <guid>https://sin-ack.github.io/posts/jpg-loader-bork/</guid>
      <description>&lt;p&gt;I got the chance to investigate an interesting bug in
&lt;a href=&#34;https://serenityos.org/&#34;&gt;SerenityOS&lt;/a&gt; this week. It was related to the decoding
of JPG images in the operating system. For some reason, when a JPG image is
viewed, it comes out like this:&lt;/p&gt;
&lt;figure&gt;&lt;img src=&#34;https://sin-ack.github.io/images/serenity-jpgloader/lenna-broken.png&#34;
         alt=&#34;Lenna,
showing up with incorrect colors.&#34;/&gt;&lt;figcaption&gt;
            &lt;p&gt;Lenna,
showing up with incorrect colors.&lt;/p&gt;
        &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Weird, huh? Also seems like a simple confusion of RGB vs. BGR. And sure enough,
making the following change on &lt;code&gt;JPGLoader.cpp&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-diff&#34; data-lang=&#34;diff&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gd&#34;&gt;-   const Color color { (u8)block.y[pixel_index], (u8)block.cb[pixel_index], (u8)block.cr[pixel_index] };
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gd&#34;&gt;&lt;/span&gt;&lt;span class=&#34;gi&#34;&gt;+   const Color color { (u8)block.cr[pixel_index], (u8)block.cb[pixel_index], (u8)block.y[pixel_index] };
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gi&#34;&gt;&lt;/span&gt;    context.bitmap-&amp;gt;set_pixel(x, y, color);
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;makes the image show up correctly. Case closed!&lt;/p&gt;
&lt;p&gt;&amp;hellip;not. Why did this even break in the first place?&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
